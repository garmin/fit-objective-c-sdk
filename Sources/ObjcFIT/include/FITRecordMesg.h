/////////////////////////////////////////////////////////////////////////////////////////////
// Copyright 2022 Garmin International, Inc.
// Licensed under the Flexible and Interoperable Data Transfer (FIT) Protocol License; you
// may not use this file except in compliance with the Flexible and Interoperable Data
// Transfer (FIT) Protocol License.
/////////////////////////////////////////////////////////////////////////////////////////////
// ****WARNING****  This file is auto-generated!  Do NOT edit this file.
// Profile Version = 21.94Release
// Tag = production/akw/21.94.00-0-g0f668193
/////////////////////////////////////////////////////////////////////////////////////////////


#import <Foundation/Foundation.h>

#import "FITDate.h"
#import "FITMessage.h"
#import "FITTypes.h"

NS_ASSUME_NONNULL_BEGIN

@interface FITRecordMesg : FITMessage
- (id)init;
// Timestamp 
- (BOOL)isTimestampValid;
- (FITDate *)getTimestamp;
- (void)setTimestamp:(FITDate *)timestamp;
// PositionLat 
- (BOOL)isPositionLatValid;
- (FITSInt32)getPositionLat;
- (void)setPositionLat:(FITSInt32)positionLat;
// PositionLong 
- (BOOL)isPositionLongValid;
- (FITSInt32)getPositionLong;
- (void)setPositionLong:(FITSInt32)positionLong;
// Altitude 
- (BOOL)isAltitudeValid;
- (FITFloat32)getAltitude;
- (void)setAltitude:(FITFloat32)altitude;
// HeartRate 
- (BOOL)isHeartRateValid;
- (FITUInt8)getHeartRate;
- (void)setHeartRate:(FITUInt8)heartRate;
// Cadence 
- (BOOL)isCadenceValid;
- (FITUInt8)getCadence;
- (void)setCadence:(FITUInt8)cadence;
// Distance 
- (BOOL)isDistanceValid;
- (FITFloat32)getDistance;
- (void)setDistance:(FITFloat32)distance;
// Speed 
- (BOOL)isSpeedValid;
- (FITFloat32)getSpeed;
- (void)setSpeed:(FITFloat32)speed;
// Power 
- (BOOL)isPowerValid;
- (FITUInt16)getPower;
- (void)setPower:(FITUInt16)power;
// CompressedSpeedDistance 
@property(readonly,nonatomic) uint8_t numCompressedSpeedDistanceValues;
- (BOOL)isCompressedSpeedDistanceValidforIndex : (uint8_t)index;
- (FITByte)getCompressedSpeedDistanceforIndex : (uint8_t)index;
- (void)setCompressedSpeedDistance:(FITByte)compressedSpeedDistance forIndex:(uint8_t)index;
// Grade 
- (BOOL)isGradeValid;
- (FITFloat32)getGrade;
- (void)setGrade:(FITFloat32)grade;
// Resistance 
- (BOOL)isResistanceValid;
- (FITUInt8)getResistance;
- (void)setResistance:(FITUInt8)resistance;
// TimeFromCourse 
- (BOOL)isTimeFromCourseValid;
- (FITFloat32)getTimeFromCourse;
- (void)setTimeFromCourse:(FITFloat32)timeFromCourse;
// CycleLength 
- (BOOL)isCycleLengthValid;
- (FITFloat32)getCycleLength;
- (void)setCycleLength:(FITFloat32)cycleLength;
// Temperature 
- (BOOL)isTemperatureValid;
- (FITSInt8)getTemperature;
- (void)setTemperature:(FITSInt8)temperature;
// Speed1s 
@property(readonly,nonatomic) uint8_t numSpeed1sValues;
- (BOOL)isSpeed1sValidforIndex : (uint8_t)index;
- (FITFloat32)getSpeed1sforIndex : (uint8_t)index;
- (void)setSpeed1s:(FITFloat32)speed1s forIndex:(uint8_t)index;
// Cycles 
- (BOOL)isCyclesValid;
- (FITUInt8)getCycles;
- (void)setCycles:(FITUInt8)cycles;
// TotalCycles 
- (BOOL)isTotalCyclesValid;
- (FITUInt32)getTotalCycles;
- (void)setTotalCycles:(FITUInt32)totalCycles;
// CompressedAccumulatedPower 
- (BOOL)isCompressedAccumulatedPowerValid;
- (FITUInt16)getCompressedAccumulatedPower;
- (void)setCompressedAccumulatedPower:(FITUInt16)compressedAccumulatedPower;
// AccumulatedPower 
- (BOOL)isAccumulatedPowerValid;
- (FITUInt32)getAccumulatedPower;
- (void)setAccumulatedPower:(FITUInt32)accumulatedPower;
// LeftRightBalance 
- (BOOL)isLeftRightBalanceValid;
- (FITLeftRightBalance)getLeftRightBalance;
- (void)setLeftRightBalance:(FITLeftRightBalance)leftRightBalance;
// GpsAccuracy 
- (BOOL)isGpsAccuracyValid;
- (FITUInt8)getGpsAccuracy;
- (void)setGpsAccuracy:(FITUInt8)gpsAccuracy;
// VerticalSpeed 
- (BOOL)isVerticalSpeedValid;
- (FITFloat32)getVerticalSpeed;
- (void)setVerticalSpeed:(FITFloat32)verticalSpeed;
// Calories 
- (BOOL)isCaloriesValid;
- (FITUInt16)getCalories;
- (void)setCalories:(FITUInt16)calories;
// VerticalOscillation 
- (BOOL)isVerticalOscillationValid;
- (FITFloat32)getVerticalOscillation;
- (void)setVerticalOscillation:(FITFloat32)verticalOscillation;
// StanceTimePercent 
- (BOOL)isStanceTimePercentValid;
- (FITFloat32)getStanceTimePercent;
- (void)setStanceTimePercent:(FITFloat32)stanceTimePercent;
// StanceTime 
- (BOOL)isStanceTimeValid;
- (FITFloat32)getStanceTime;
- (void)setStanceTime:(FITFloat32)stanceTime;
// ActivityType 
- (BOOL)isActivityTypeValid;
- (FITActivityType)getActivityType;
- (void)setActivityType:(FITActivityType)activityType;
// LeftTorqueEffectiveness 
- (BOOL)isLeftTorqueEffectivenessValid;
- (FITFloat32)getLeftTorqueEffectiveness;
- (void)setLeftTorqueEffectiveness:(FITFloat32)leftTorqueEffectiveness;
// RightTorqueEffectiveness 
- (BOOL)isRightTorqueEffectivenessValid;
- (FITFloat32)getRightTorqueEffectiveness;
- (void)setRightTorqueEffectiveness:(FITFloat32)rightTorqueEffectiveness;
// LeftPedalSmoothness 
- (BOOL)isLeftPedalSmoothnessValid;
- (FITFloat32)getLeftPedalSmoothness;
- (void)setLeftPedalSmoothness:(FITFloat32)leftPedalSmoothness;
// RightPedalSmoothness 
- (BOOL)isRightPedalSmoothnessValid;
- (FITFloat32)getRightPedalSmoothness;
- (void)setRightPedalSmoothness:(FITFloat32)rightPedalSmoothness;
// CombinedPedalSmoothness 
- (BOOL)isCombinedPedalSmoothnessValid;
- (FITFloat32)getCombinedPedalSmoothness;
- (void)setCombinedPedalSmoothness:(FITFloat32)combinedPedalSmoothness;
// Time128 
- (BOOL)isTime128Valid;
- (FITFloat32)getTime128;
- (void)setTime128:(FITFloat32)time128;
// StrokeType 
- (BOOL)isStrokeTypeValid;
- (FITStrokeType)getStrokeType;
- (void)setStrokeType:(FITStrokeType)strokeType;
// Zone 
- (BOOL)isZoneValid;
- (FITUInt8)getZone;
- (void)setZone:(FITUInt8)zone;
// BallSpeed 
- (BOOL)isBallSpeedValid;
- (FITFloat32)getBallSpeed;
- (void)setBallSpeed:(FITFloat32)ballSpeed;
// Cadence256 
- (BOOL)isCadence256Valid;
- (FITFloat32)getCadence256;
- (void)setCadence256:(FITFloat32)cadence256;
// FractionalCadence 
- (BOOL)isFractionalCadenceValid;
- (FITFloat32)getFractionalCadence;
- (void)setFractionalCadence:(FITFloat32)fractionalCadence;
// TotalHemoglobinConc 
- (BOOL)isTotalHemoglobinConcValid;
- (FITFloat32)getTotalHemoglobinConc;
- (void)setTotalHemoglobinConc:(FITFloat32)totalHemoglobinConc;
// TotalHemoglobinConcMin 
- (BOOL)isTotalHemoglobinConcMinValid;
- (FITFloat32)getTotalHemoglobinConcMin;
- (void)setTotalHemoglobinConcMin:(FITFloat32)totalHemoglobinConcMin;
// TotalHemoglobinConcMax 
- (BOOL)isTotalHemoglobinConcMaxValid;
- (FITFloat32)getTotalHemoglobinConcMax;
- (void)setTotalHemoglobinConcMax:(FITFloat32)totalHemoglobinConcMax;
// SaturatedHemoglobinPercent 
- (BOOL)isSaturatedHemoglobinPercentValid;
- (FITFloat32)getSaturatedHemoglobinPercent;
- (void)setSaturatedHemoglobinPercent:(FITFloat32)saturatedHemoglobinPercent;
// SaturatedHemoglobinPercentMin 
- (BOOL)isSaturatedHemoglobinPercentMinValid;
- (FITFloat32)getSaturatedHemoglobinPercentMin;
- (void)setSaturatedHemoglobinPercentMin:(FITFloat32)saturatedHemoglobinPercentMin;
// SaturatedHemoglobinPercentMax 
- (BOOL)isSaturatedHemoglobinPercentMaxValid;
- (FITFloat32)getSaturatedHemoglobinPercentMax;
- (void)setSaturatedHemoglobinPercentMax:(FITFloat32)saturatedHemoglobinPercentMax;
// DeviceIndex 
- (BOOL)isDeviceIndexValid;
- (FITDeviceIndex)getDeviceIndex;
- (void)setDeviceIndex:(FITDeviceIndex)deviceIndex;
// LeftPco 
- (BOOL)isLeftPcoValid;
- (FITSInt8)getLeftPco;
- (void)setLeftPco:(FITSInt8)leftPco;
// RightPco 
- (BOOL)isRightPcoValid;
- (FITSInt8)getRightPco;
- (void)setRightPco:(FITSInt8)rightPco;
// LeftPowerPhase 
@property(readonly,nonatomic) uint8_t numLeftPowerPhaseValues;
- (BOOL)isLeftPowerPhaseValidforIndex : (uint8_t)index;
- (FITFloat32)getLeftPowerPhaseforIndex : (uint8_t)index;
- (void)setLeftPowerPhase:(FITFloat32)leftPowerPhase forIndex:(uint8_t)index;
// LeftPowerPhasePeak 
@property(readonly,nonatomic) uint8_t numLeftPowerPhasePeakValues;
- (BOOL)isLeftPowerPhasePeakValidforIndex : (uint8_t)index;
- (FITFloat32)getLeftPowerPhasePeakforIndex : (uint8_t)index;
- (void)setLeftPowerPhasePeak:(FITFloat32)leftPowerPhasePeak forIndex:(uint8_t)index;
// RightPowerPhase 
@property(readonly,nonatomic) uint8_t numRightPowerPhaseValues;
- (BOOL)isRightPowerPhaseValidforIndex : (uint8_t)index;
- (FITFloat32)getRightPowerPhaseforIndex : (uint8_t)index;
- (void)setRightPowerPhase:(FITFloat32)rightPowerPhase forIndex:(uint8_t)index;
// RightPowerPhasePeak 
@property(readonly,nonatomic) uint8_t numRightPowerPhasePeakValues;
- (BOOL)isRightPowerPhasePeakValidforIndex : (uint8_t)index;
- (FITFloat32)getRightPowerPhasePeakforIndex : (uint8_t)index;
- (void)setRightPowerPhasePeak:(FITFloat32)rightPowerPhasePeak forIndex:(uint8_t)index;
// EnhancedSpeed 
- (BOOL)isEnhancedSpeedValid;
- (FITFloat32)getEnhancedSpeed;
- (void)setEnhancedSpeed:(FITFloat32)enhancedSpeed;
// EnhancedAltitude 
- (BOOL)isEnhancedAltitudeValid;
- (FITFloat32)getEnhancedAltitude;
- (void)setEnhancedAltitude:(FITFloat32)enhancedAltitude;
// BatterySoc 
- (BOOL)isBatterySocValid;
- (FITFloat32)getBatterySoc;
- (void)setBatterySoc:(FITFloat32)batterySoc;
// MotorPower 
- (BOOL)isMotorPowerValid;
- (FITUInt16)getMotorPower;
- (void)setMotorPower:(FITUInt16)motorPower;
// VerticalRatio 
- (BOOL)isVerticalRatioValid;
- (FITFloat32)getVerticalRatio;
- (void)setVerticalRatio:(FITFloat32)verticalRatio;
// StanceTimeBalance 
- (BOOL)isStanceTimeBalanceValid;
- (FITFloat32)getStanceTimeBalance;
- (void)setStanceTimeBalance:(FITFloat32)stanceTimeBalance;
// StepLength 
- (BOOL)isStepLengthValid;
- (FITFloat32)getStepLength;
- (void)setStepLength:(FITFloat32)stepLength;
// AbsolutePressure 
- (BOOL)isAbsolutePressureValid;
- (FITUInt32)getAbsolutePressure;
- (void)setAbsolutePressure:(FITUInt32)absolutePressure;
// Depth 
- (BOOL)isDepthValid;
- (FITFloat32)getDepth;
- (void)setDepth:(FITFloat32)depth;
// NextStopDepth 
- (BOOL)isNextStopDepthValid;
- (FITFloat32)getNextStopDepth;
- (void)setNextStopDepth:(FITFloat32)nextStopDepth;
// NextStopTime 
- (BOOL)isNextStopTimeValid;
- (FITUInt32)getNextStopTime;
- (void)setNextStopTime:(FITUInt32)nextStopTime;
// TimeToSurface 
- (BOOL)isTimeToSurfaceValid;
- (FITUInt32)getTimeToSurface;
- (void)setTimeToSurface:(FITUInt32)timeToSurface;
// NdlTime 
- (BOOL)isNdlTimeValid;
- (FITUInt32)getNdlTime;
- (void)setNdlTime:(FITUInt32)ndlTime;
// CnsLoad 
- (BOOL)isCnsLoadValid;
- (FITUInt8)getCnsLoad;
- (void)setCnsLoad:(FITUInt8)cnsLoad;
// N2Load 
- (BOOL)isN2LoadValid;
- (FITUInt16)getN2Load;
- (void)setN2Load:(FITUInt16)n2Load;
// Grit 
- (BOOL)isGritValid;
- (FITFloat32)getGrit;
- (void)setGrit:(FITFloat32)grit;
// Flow 
- (BOOL)isFlowValid;
- (FITFloat32)getFlow;
- (void)setFlow:(FITFloat32)flow;
// EbikeTravelRange 
- (BOOL)isEbikeTravelRangeValid;
- (FITUInt16)getEbikeTravelRange;
- (void)setEbikeTravelRange:(FITUInt16)ebikeTravelRange;
// EbikeBatteryLevel 
- (BOOL)isEbikeBatteryLevelValid;
- (FITUInt8)getEbikeBatteryLevel;
- (void)setEbikeBatteryLevel:(FITUInt8)ebikeBatteryLevel;
// EbikeAssistMode 
- (BOOL)isEbikeAssistModeValid;
- (FITUInt8)getEbikeAssistMode;
- (void)setEbikeAssistMode:(FITUInt8)ebikeAssistMode;
// EbikeAssistLevelPercent 
- (BOOL)isEbikeAssistLevelPercentValid;
- (FITUInt8)getEbikeAssistLevelPercent;
- (void)setEbikeAssistLevelPercent:(FITUInt8)ebikeAssistLevelPercent;
// CoreTemperature 
- (BOOL)isCoreTemperatureValid;
- (FITFloat32)getCoreTemperature;
- (void)setCoreTemperature:(FITFloat32)coreTemperature;

@end

NS_ASSUME_NONNULL_END
